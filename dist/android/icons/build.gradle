import com.android.ide.common.vectordrawable.Svg2Vector
import groovy.io.FileType

apply plugin: 'com.android.library'
apply plugin: 'maven'

final IS_SNAPSHOT = System.env.TRAVIS_BRANCH != 'master' || System.env.TRAVIS_PULL_REQUEST != 'false'
final VERSION_NAME = (System.env.VERSION_NAME ?: "1.0.0") + (IS_SNAPSHOT ? "-SNAPSHOT" : "")

class Svg2VectorTask extends DefaultTask {
    @InputDirectory
    public File inputDir

    @OutputDirectory
    public File output

    @TaskAction
    void svgToVector() {
        if (!inputDir.isDirectory()) {
            throw new IllegalArgumentException("input directory must exist")
        }

        output.mkdirs()

        inputDir.eachFileMatch(FileType.FILES, ~/.*\.svg$/) {
            def outputfile = new File(output, "ic_" + it.name.replace('-','_').replaceAll(/\.svg$/, ".xml"))
            FileOutputStream out = new FileOutputStream(outputfile)
            String error = Svg2Vector.parseSvgToXml(it, out)
            if (error != null && !error.empty)
                throw new IllegalStateException("${outputfile}: ${error}")
            out.close()
        }
    }
}

configurations {
    deployerJars
}

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 26
        versionCode ((System.env.CI_BUILD_NUMBER ?: 1) as Integer)
        versionName VERSION_NAME

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

android.libraryVariants.all { variant ->
    def svgtask = project.tasks.create("svgToVector${variant.name.capitalize()}", Svg2VectorTask)
    def dir = new File("$buildDir/generated/res/svg2vector/${variant.dirName}")
    svgtask.configure {
        inputDir = file("../../optimized/android")
        output = new File(dir, "drawable")
    }
    variant.registerResGeneratingTask(svgtask, dir)
}

dependencies {
    deployerJars "org.apache.maven.wagon:wagon-http:2.2"
}

uploadArchives {
    repositories.mavenDeployer {
        configuration = configurations.deployerJars
        repository(url: "https://nexus.blt.meetup.com/content/repositories/${IS_SNAPSHOT ? 'snapshots' : 'releases'}") {
            authentication(userName: "deployment", password: System.env.NEXUS_DEPLOY_PASSWD)
            pom.project {
                name "swarm-icons android"
                groupId "com.meetup"
                artifactId "swarm-icons-android"
                version VERSION_NAME
                url "https://github.com/meetup/swarm-icons"
                organization {
                    name "Meetup"
                    url "https://www.meetup.com/"
                }
                scm {
                    url "https://github.com/meetup/swarm-icons"
                    connection 'scm:git:git://github.com/meetup/swarm-icons.git'
                    developerConnection 'scm:git:git@github.com:meetup/swarm-icons.git'
                }
            }
        }
    }
}
